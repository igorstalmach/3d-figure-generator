// Generated from ./src/grammar/GeometryGrammar.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class GeometryGrammarLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly INT = 15;
	public static readonly COLOR = 16;
	public static readonly HEX_COLOR = 17;
	public static readonly HEX_DIGIT = 18;
	public static readonly FLOAT = 19;
	public static readonly WS = 20;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "INT", "COLOR", "HEX_COLOR", 
		"HEX_DIGIT", "FLOAT", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'draw'", "'sphere'", "'('", "')'", "','", "'box'", 
		"'pyramid'", "'size'", "'/'", "'radius'", "'color'", "'position'", "'rotation'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "INT", "COLOR", "HEX_COLOR", "HEX_DIGIT", "FLOAT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(GeometryGrammarLexer._LITERAL_NAMES, GeometryGrammarLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return GeometryGrammarLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(GeometryGrammarLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "GeometryGrammar.g4"; }

	// @Override
	public get ruleNames(): string[] { return GeometryGrammarLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return GeometryGrammarLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return GeometryGrammarLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return GeometryGrammarLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x16\xC5\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x03\x02\x03\x02\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b" +
		"\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x06\x10s\n\x10\r" +
		"\x10\x0E\x10t\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x05\x11\xA3\n\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x12\x03\x12\x03\x12\x05\x12\xAD\n\x12\x03\x13\x03\x13\x03\x14\x05\x14" +
		"\xB2\n\x14\x03\x14\x06\x14\xB5\n\x14\r\x14\x0E\x14\xB6\x03\x14\x03\x14" +
		"\x06\x14\xBB\n\x14\r\x14\x0E\x14\xBC\x03\x15\x06\x15\xC0\n\x15\r\x15\x0E" +
		"\x15\xC1\x03\x15\x03\x15\x02\x02\x02\x16\x03\x02\x03\x05\x02\x04\x07\x02" +
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
		"#\x02\x13%\x02\x14\'\x02\x15)\x02\x16\x03\x02\x05\x03\x022;\x05\x022;" +
		"CHch\x05\x02\v\f\x0F\x0F\"\"\x02\xD2\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x03" +
		"+\x03\x02\x02\x02\x05-\x03\x02\x02\x02\x072\x03\x02\x02\x02\t9\x03\x02" +
		"\x02\x02\v;\x03\x02\x02\x02\r=\x03\x02\x02\x02\x0F?\x03\x02\x02\x02\x11" +
		"C\x03\x02\x02\x02\x13K\x03\x02\x02\x02\x15P\x03\x02\x02\x02\x17R\x03\x02" +
		"\x02\x02\x19Y\x03\x02\x02\x02\x1B_\x03\x02\x02\x02\x1Dh\x03\x02\x02\x02" +
		"\x1Fr\x03\x02\x02\x02!\xA2\x03\x02\x02\x02#\xA4\x03\x02\x02\x02%\xAE\x03" +
		"\x02\x02\x02\'\xB1\x03\x02\x02\x02)\xBF\x03\x02\x02\x02+,\x07=\x02\x02" +
		",\x04\x03\x02\x02\x02-.\x07f\x02\x02./\x07t\x02\x02/0\x07c\x02\x0201\x07" +
		"y\x02\x021\x06\x03\x02\x02\x0223\x07u\x02\x0234\x07r\x02\x0245\x07j\x02" +
		"\x0256\x07g\x02\x0267\x07t\x02\x0278\x07g\x02\x028\b\x03\x02\x02\x029" +
		":\x07*\x02\x02:\n\x03\x02\x02\x02;<\x07+\x02\x02<\f\x03\x02\x02\x02=>" +
		"\x07.\x02\x02>\x0E\x03\x02\x02\x02?@\x07d\x02\x02@A\x07q\x02\x02AB\x07" +
		"z\x02\x02B\x10\x03\x02\x02\x02CD\x07r\x02\x02DE\x07{\x02\x02EF\x07t\x02" +
		"\x02FG\x07c\x02\x02GH\x07o\x02\x02HI\x07k\x02\x02IJ\x07f\x02\x02J\x12" +
		"\x03\x02\x02\x02KL\x07u\x02\x02LM\x07k\x02\x02MN\x07|\x02\x02NO\x07g\x02" +
		"\x02O\x14\x03\x02\x02\x02PQ\x071\x02\x02Q\x16\x03\x02\x02\x02RS\x07t\x02" +
		"\x02ST\x07c\x02\x02TU\x07f\x02\x02UV\x07k\x02\x02VW\x07w\x02\x02WX\x07" +
		"u\x02\x02X\x18\x03\x02\x02\x02YZ\x07e\x02\x02Z[\x07q\x02\x02[\\\x07n\x02" +
		"\x02\\]\x07q\x02\x02]^\x07t\x02\x02^\x1A\x03\x02\x02\x02_`\x07r\x02\x02" +
		"`a\x07q\x02\x02ab\x07u\x02\x02bc\x07k\x02\x02cd\x07v\x02\x02de\x07k\x02" +
		"\x02ef\x07q\x02\x02fg\x07p\x02\x02g\x1C\x03\x02\x02\x02hi\x07t\x02\x02" +
		"ij\x07q\x02\x02jk\x07v\x02\x02kl\x07c\x02\x02lm\x07v\x02\x02mn\x07k\x02" +
		"\x02no\x07q\x02\x02op\x07p\x02\x02p\x1E\x03\x02\x02\x02qs\t\x02\x02\x02" +
		"rq\x03\x02\x02\x02st\x03\x02\x02\x02tr\x03\x02\x02\x02tu\x03\x02\x02\x02" +
		"u \x03\x02\x02\x02vw\x07t\x02\x02wx\x07g\x02\x02x\xA3\x07f\x02\x02yz\x07" +
		"d\x02\x02z{\x07n\x02\x02{|\x07w\x02\x02|\xA3\x07g\x02\x02}~\x07i\x02\x02" +
		"~\x7F\x07t\x02\x02\x7F\x80\x07g\x02\x02\x80\x81\x07g\x02\x02\x81\xA3\x07" +
		"p\x02\x02\x82\x83\x07{\x02\x02\x83\x84\x07g\x02\x02\x84\x85\x07n\x02\x02" +
		"\x85\x86\x07n\x02\x02\x86\x87\x07q\x02\x02\x87\xA3\x07y\x02\x02\x88\x89" +
		"\x07q\x02\x02\x89\x8A\x07t\x02\x02\x8A\x8B\x07c\x02\x02\x8B\x8C\x07p\x02" +
		"\x02\x8C\x8D\x07i\x02\x02\x8D\xA3\x07g\x02\x02\x8E\x8F\x07r\x02\x02\x8F" +
		"\x90\x07w\x02\x02\x90\x91\x07t\x02\x02\x91\x92\x07r\x02\x02\x92\x93\x07" +
		"n\x02\x02\x93\xA3\x07g\x02\x02\x94\x95\x07d\x02\x02\x95\x96\x07n\x02\x02" +
		"\x96\x97\x07c\x02\x02\x97\x98\x07e\x02\x02\x98\xA3\x07m\x02\x02\x99\x9A" +
		"\x07i\x02\x02\x9A\x9B\x07t\x02\x02\x9B\x9C\x07c\x02\x02\x9C\xA3\x07{\x02" +
		"\x02\x9D\x9E\x07d\x02\x02\x9E\x9F\x07t\x02\x02\x9F\xA0\x07q\x02\x02\xA0" +
		"\xA1\x07y\x02\x02\xA1\xA3\x07p\x02\x02\xA2v\x03\x02\x02\x02\xA2y\x03\x02" +
		"\x02\x02\xA2}\x03\x02\x02\x02\xA2\x82\x03\x02\x02\x02\xA2\x88\x03\x02" +
		"\x02\x02\xA2\x8E\x03\x02\x02\x02\xA2\x94\x03\x02\x02\x02\xA2\x99\x03\x02" +
		"\x02\x02\xA2\x9D\x03\x02\x02\x02\xA3\"\x03\x02\x02\x02\xA4\xA5\x07%\x02" +
		"\x02\xA5\xA6\x05%\x13\x02\xA6\xA7\x05%\x13\x02\xA7\xAC\x05%\x13\x02\xA8" +
		"\xA9\x05%\x13\x02\xA9\xAA\x05%\x13\x02\xAA\xAB\x05%\x13\x02\xAB\xAD\x03" +
		"\x02\x02\x02\xAC\xA8\x03\x02\x02\x02\xAC\xAD\x03\x02\x02\x02\xAD$\x03" +
		"\x02\x02\x02\xAE\xAF\t\x03\x02\x02\xAF&\x03\x02\x02\x02\xB0\xB2\x07/\x02" +
		"\x02\xB1\xB0\x03\x02\x02\x02\xB1\xB2\x03\x02\x02\x02\xB2\xB4\x03\x02\x02" +
		"\x02\xB3\xB5\t\x02\x02\x02\xB4\xB3\x03\x02\x02\x02\xB5\xB6\x03\x02\x02" +
		"\x02\xB6\xB4\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB8\x03\x02\x02" +
		"\x02\xB8\xBA\x070\x02\x02\xB9\xBB\t\x02\x02\x02\xBA\xB9\x03\x02\x02\x02" +
		"\xBB\xBC\x03\x02\x02\x02\xBC\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02" +
		"\xBD(\x03\x02\x02\x02\xBE\xC0\t\x04\x02\x02\xBF\xBE\x03\x02\x02\x02\xC0" +
		"\xC1\x03\x02\x02\x02\xC1\xBF\x03\x02\x02\x02\xC1\xC2\x03\x02\x02\x02\xC2" +
		"\xC3\x03\x02\x02\x02\xC3\xC4\b\x15\x02\x02\xC4*\x03\x02\x02\x02\n\x02" +
		"t\xA2\xAC\xB1\xB6\xBC\xC1\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!GeometryGrammarLexer.__ATN) {
			GeometryGrammarLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(GeometryGrammarLexer._serializedATN));
		}

		return GeometryGrammarLexer.__ATN;
	}

}

